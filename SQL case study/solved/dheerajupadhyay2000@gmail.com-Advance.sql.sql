--SQL Advance Case Study
use db_SQLCaseStudies;

--Q1--BEGIN 
	
select T.Idcustomer,L.State,T.Date from DIM_LOCATION L
INNER JOIN FACT_Transactions t
on L.IDLocation = T.IDLocation
WHERE YEAR(DATE) BETWEEN 2005 AND GETDATE();


--Q1--END

--Q2--BEGIN
	
select TOP 1 L.country,L.state,M.Manufacturer_Name,SUM(T.QUANTITY) AS [Quantity] FROM DIM_LOCATION L
LEFT JOIN FACT_TRANSACTIONS T
ON L.IDLocation=T.IDLocation
LEFT JOIN DIM_MODEL D
ON T.IDModel=D.IDModel
LEFT JOIN DIM_MANUFACTURER M
ON D.IDManufacturer=M.IDManufacturer
WHERE M.Manufacturer_Name  = 'Samsung'
GROUP BY L.Country,L.State,M.Manufacturer_Name
ORDER BY SUM(T.Quantity) DESC;


--Q2--END

--Q3--BEGIN      

	
select M.Model_name,L.Zipcode,L.State,COUNT(T.idmodel) AS [No. of transaction]  from FACT_TRANSACTIONS T
LEFT JOIN DIM_MODEL M
ON T.IDModel=M.IDModel
LEFT JOIN DIM_LOCATION L
ON T.IDLocation = L.IDLocation
GROUP BY M.Model_Name,L.ZipCode,L.State


--Q3--END

--Q4--BEGIN


SELECT TOP 1 M.Manufacturer_Name,MO.Model_name,MO.Unit_price FROM DIM_MANUFACTURER M
LEFT JOIN  DIM_MODEL MO
ON M.IDManufacturer=MO.IDManufacturer
GROUP BY M.Manufacturer_Name,MO.Model_Name,MO.Unit_price
ORDER BY MO.Unit_price ASC


--Q4--END

--Q5--BEGIN


SELECT M.Manufacturer_Name, MO.Model_Name, AVG(MO.UNIT_PRICE) AS [Average price] FROM DIM_MODEL MO
INNER JOIN DIM_MANUFACTURER M ON M.IDMANUFACTURER = MO.IDManufacturer
WHERE MANUFACTURER_NAME IN (SELECT TOP 5 MANUFACTURER_NAME FROM FACT_TRANSACTIONS 
INNER JOIN DIM_MODEL 
ON FACT_TRANSACTIONS.IDMODEL = DIM_MODEL.IDMODEL
INNER JOIN DIM_MANUFACTURER 
ON DIM_MANUFACTURER.IDMANUFACTURER = DIM_MODEL.IDMANUFACTURER
GROUP BY MANUFACTURER_NAME
ORDER BY SUM(QUANTITY))
GROUP BY MODEL_NAME,Manufacturer_Name
ORDER BY AVG(UNIT_PRICE) DESC


--Q5--END

--Q6--BEGIN


select c.Customer_name,avg(t.Totalprice) as [Average Price] from DIM_CUSTOMER c
left join FACT_TRANSACTIONS t
on c.IDCustomer=t.IDCustomer
where year(t.date) = 2009 
group by c.Customer_Name
having avg(t.totalprice) >500


--Q6--END
	
--Q7--BEGIN  


select top 5 mo.Model_name ,sum(t.quantity) as Quantity from DIM_MODEL mo
inner join FACT_TRANSACTIONS t
on mo.IDModel=t.IDModel
where year(t.date) in (2008,2009,2010) 
group by mo.Model_Name
order by sum(t.quantity) desc



--- SEE THE UPPER ANSWER IS WRONG WE MUST INTERSECT THE TABLE TO GET 1 COMMON MODEL OF ALL FROM 3 YEARS---


--	Question 7-

select * FROM  (SELECT top 5 mo.Model_Name from dbo.fact_transactions t
inner join dbo.dim_model mo
on t.idmodel = mo.idmodel
INNER JOIN DBO.DIM_DATE D
ON T.Date = D.DATE 
WHERE YEAR =2008
group by mo.Model_Name
ORDER BY SUM(T.QUANTITY) desc) AS TB1 

intersect

select * FROM  (SELECT top 5 mo.Model_Name from dbo.fact_transactions t
inner join dbo.dim_model mo
on t.idmodel = mo.idmodel
INNER JOIN DBO.DIM_DATE D
ON T.Date = D.DATE 
WHERE YEAR =2009
group by mo.Model_Name
ORDER BY SUM(T.QUANTITY) desc) AS TB1 

intersect

select * FROM  (SELECT top 5 mo.Model_Name from dbo.fact_transactions t
inner join dbo.dim_model mo
on t.idmodel = mo.idmodel
INNER JOIN DBO.DIM_DATE D
ON T.Date = D.DATE 
WHERE YEAR =2010
group by mo.Model_Name
ORDER BY SUM(T.QUANTITY) desc) AS TB1 



--NOTE:-- IF U WRITE ANY OTHER COLUMN NAME AFTER MO.MODEL_NAMECIT MATCH WITH INTERSECT AND QUERY EXCECUTE 
       --BUT ZERO ROW AFFECTED SO DON'T USE ANY COLUMN NAME USE ONLY REQUIRES NAME FROM COLUMN--



--Q7--END	

--Q8--BEGIN


SELECT TOP 1 * FROM (
select  TOP 2  m.Manufacturer_name,YEAR(T.Date) AS [Year],SUM(T.TotalPrice) AS [Amount] FROM DIM_MANUFACTURER M
LEFT JOIN DIM_MODEL MO
ON M.IDMANUFACTURER=MO.IDMANUFACTURER
LEFT JOIN FACT_TRANSACTIONS T
ON MO.IDMODEL = T.IDMODEL
WHERE YEAR(T.DATE) = '2009'
GROUP BY M.MANUFACTURER_NAME,YEAR(T.Date)
ORDER BY AMOUNT DESC )AS A,

(select  TOP 2  m.Manufacturer_name,YEAR(T.Date) AS [Year],SUM(T.TotalPrice) AS  [Amount] FROM DIM_MANUFACTURER M
LEFT JOIN DIM_MODEL MO
ON M.IDMANUFACTURER=MO.IDMANUFACTURER
LEFT JOIN FACT_TRANSACTIONS T
ON MO.IDMODEL = T.IDMODEL
WHERE YEAR(T.DATE) = '2010'
GROUP BY M.MANUFACTURER_NAME,YEAR(T.Date)
ORDER BY [Amount] DESC )AS B;

--all question will get wrong by just missing one line see the line in below question and every thing is gone same--


SELECT TOP 1 * FROM (
select  TOP 2  m.Manufacturer_name,YEAR(T.Date) AS [Year],SUM(T.TotalPrice) AS [Amount_1] FROM DIM_MANUFACTURER M
LEFT JOIN DIM_MODEL MO
ON M.IDMANUFACTURER=MO.IDMANUFACTURER
LEFT JOIN FACT_TRANSACTIONS T
ON MO.IDMODEL = T.IDMODEL
WHERE YEAR(T.DATE) = '2009'
GROUP BY M.MANUFACTURER_NAME,YEAR(T.Date)
ORDER BY Amount_1 DESC )AS A,

(select  TOP 2  m.Manufacturer_name,YEAR(T.Date) AS [Year],SUM(T.TotalPrice) AS  [Amount_2] FROM DIM_MANUFACTURER M
LEFT JOIN DIM_MODEL MO
ON M.IDMANUFACTURER=MO.IDMANUFACTURER
LEFT JOIN FACT_TRANSACTIONS T
ON MO.IDMODEL = T.IDMODEL
WHERE YEAR(T.DATE) = '2010'
GROUP BY M.MANUFACTURER_NAME,YEAR(T.Date)
ORDER BY [Amount_2] DESC ) AS B
order by Amount_1,Amount_2 asc


--Q8--END

--Q9--BEGIN
	
SELECT Manufacturer_name FROM DIM_MANUFACTURER T1
INNER JOIN DIM_MODEL T2 ON T1.IDMANUFACTURER= T2.IDMANUFACTURER
INNER JOIN FACT_TRANSACTIONS T3 ON T2.IDMODEL= T3.IDMODEL
WHERE YEAR(DATE) = 2010 
EXCEPT 
SELECT MANUFACTURER_NAME FROM DIM_MANUFACTURER T1
INNER JOIN DIM_MODEL T2 ON T1.IDMANUFACTURER= T2.IDMANUFACTURER
INNER JOIN FACT_TRANSACTIONS T3 ON T2.IDMODEL= T3.IDMODEL
WHERE YEAR(DATE) = 2009	


--Q9--END

--Q10--BEGIN
	

SELECT Customer_Name,
AVERAGE_PRICE_2003,AVERAGE_QTY_2003,AVERAGE_PRICE_2004,AVERAGE_QTY_2004, AVERAGE_PRICE_2005,AVERAGE_QTY_2005,AVERAGE_PRICE_2006,AVERAGE_QTY_2006,AVERAGE_PRICE_2007,AVERAGE_QTY_2007,AVERAGE_PRICE_2008,AVERAGE_QTY_2008,AVERAGE_PRICE_2009,AVERAGE_QTY_2009,AVERAGE_PRICE_2010,AVERAGE_QTY_2010,
(CASE WHEN AVERAGE_PRICE_2003 = 0 THEN 0 ELSE ((AVERAGE_PRICE_2004 - AVERAGE_PRICE_2003)/AVERAGE_PRICE_2003)*100 END) AS CHANGE_2003_T0_2004,
(CASE WHEN AVERAGE_PRICE_2004 = 0 THEN 0 ELSE ((AVERAGE_PRICE_2005 - AVERAGE_PRICE_2004)/AVERAGE_PRICE_2004)*100 END) AS CHANGE_2004_T0_2005,
(CASE WHEN AVERAGE_PRICE_2005 = 0 THEN 0 ELSE ((AVERAGE_PRICE_2006 - AVERAGE_PRICE_2005)/AVERAGE_PRICE_2005)*100 END) AS CHANGE_2003_T0_2006,
(CASE WHEN AVERAGE_PRICE_2006 = 0 THEN 0 ELSE ((AVERAGE_PRICE_2007 - AVERAGE_PRICE_2006)/AVERAGE_PRICE_2006)*100 END) AS CHANGE_2003_T0_2007,
(CASE WHEN AVERAGE_PRICE_2007 = 0 THEN 0 ELSE ((AVERAGE_PRICE_2008- AVERAGE_PRICE_2007)/AVERAGE_PRICE_2007)*100 END) AS CHANGE_2003_T0_2008,
(CASE WHEN AVERAGE_PRICE_2008 = 0 THEN 0 ELSE ((AVERAGE_PRICE_2009 - AVERAGE_PRICE_2008)/AVERAGE_PRICE_2008)*100 END) AS CHANGE_2003_T0_2009,
(CASE WHEN AVERAGE_PRICE_2009= 0 THEN 0 ELSE ((AVERAGE_PRICE_2010 - AVERAGE_PRICE_2009)/AVERAGE_PRICE_2009)*100 END) AS CHANGE_2003_T0_2010

from (
SELECT CUSTOMER_NAME,
AVG(CASE WHEN YEAR(DATE) = 2003 THEN TOTALPRICE else 0 END) AS AVERAGE_PRICE_2003,
AVG(CASE WHEN YEAR(DATE) = 2003 THEN QUANTITY else 0 END) AS AVERAGE_QTY_2003,
AVG(CASE WHEN YEAR(DATE) = 2004 THEN TOTALPRICE else 0 END) AS AVERAGE_PRICE_2004,
AVG(CASE WHEN YEAR(DATE) = 2004 THEN QUANTITY else 0 END) AS AVERAGE_QTY_2004,
AVG(CASE WHEN YEAR(DATE) = 2005 THEN TOTALPRICE else 0 END) AS AVERAGE_PRICE_2005,
AVG(CASE WHEN YEAR(DATE) = 2005 THEN QUANTITY else 0 END) AS AVERAGE_QTY_2005,
AVG(CASE WHEN YEAR(DATE) = 2006 THEN TOTALPRICE else 0 END) AS AVERAGE_PRICE_2006,
AVG(CASE WHEN YEAR(DATE) = 2006 THEN QUANTITY else 0 END) AS AVERAGE_QTY_2006,
AVG(CASE WHEN YEAR(DATE) = 2007 THEN TOTALPRICE else 0 END) AS AVERAGE_PRICE_2007,
AVG(CASE WHEN YEAR(DATE) = 2007 THEN QUANTITY else 0 END) AS AVERAGE_QTY_2007,
AVG(CASE WHEN YEAR(DATE) = 2008 THEN TOTALPRICE else 0 END) AS AVERAGE_PRICE_2008,
AVG(CASE WHEN YEAR(DATE) = 2008 THEN QUANTITY else 0 END) AS AVERAGE_QTY_2008,
AVG(CASE WHEN YEAR(DATE) = 2009 THEN TOTALPRICE else 0 END) AS AVERAGE_PRICE_2009,
AVG(CASE WHEN YEAR(DATE) = 2009 THEN QUANTITY else 0 END) AS AVERAGE_QTY_2009,
AVG(CASE WHEN YEAR(DATE) = 2010 THEN TOTALPRICE else 0 END) AS AVERAGE_PRICE_2010,
AVG(CASE WHEN YEAR(DATE) = 2010 THEN QUANTITY else 0 END) AS AVERAGE_QTY_2010
FROM DIM_CUSTOMER C
inner JOIN FACT_TRANSACTIONS T ON T.IDCUSTOMER= C.IDCUSTOMER

WHERE Customer_Name IN (  
                          SELECT TOP 100 CUSTOMER_NAME
                          FROM FACT_TRANSACTIONS AS T1
                          LEFT JOIN DIM_CUSTOMER AS T2 ON T1.IDCUSTOMER = T2.IDCUSTOMER
                          LEFT JOIN DIM_DATE AS T3 ON T1.Date = T3.DATE
                          GROUP BY CUSTOMER_NAME
 ORDER BY SUM(TOTALPRICE) DESC)

GROUP BY CUSTOMER_NAME
) as t4

--Q10--END

